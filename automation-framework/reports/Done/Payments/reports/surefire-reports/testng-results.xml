<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="2" failed="3" skipped="0">
  <reporter-output>
    <line>
      <![CDATA[🚀 Starting Test Suite: Surefire test]]>
    </line>
    <line>
      <![CDATA[
🌍 Test Environment:
🖥️ OS: Windows 11 10.0
☕ Java Version: 23.0.1
🌐 Browser: chrome 134.0.6998.89
]]>
    </line>
    <line>
      <![CDATA[🟢 Test Started: verifyAvailablePaymentMethods (🔢 Test Case ID: TC-083_TC-084)]]>
    </line>
    <line>
      <![CDATA[
🌍 Test Environment:
🖥️ OS: Windows 11 10.0
☕ Java Version: 23.0.1
🌐 Browser: chrome 134.0.6998.118
]]>
    </line>
    <line>
      <![CDATA[❌ Test FAILED: verifyAvailablePaymentMethods - Neither PayPal nor Cash On Delivery is available! expected [true] but found [false]]]>
    </line>
    <line>
      <![CDATA[<br><img src='E:/Folder/Galal/Courses/Digital Egypt Pioneers Initiative (DEPI) - Software Testing/DEPI Software Tester Graduation Project/automation-framework/reports/screenshots\TC-083_TC-084\TC-083_TC-084_screenshot.png' height='300' width='400'/><br>]]>
    </line>
    <line>
      <![CDATA[🟢 Test Started: verifyDuplicatePaymentPrevention (🔢 Test Case ID: TC-088)]]>
    </line>
    <line>
      <![CDATA[
🌍 Test Environment:
🖥️ OS: Windows 11 10.0
☕ Java Version: 23.0.1
🌐 Browser: chrome 134.0.6998.118
]]>
    </line>
    <line>
      <![CDATA[❌ Test FAILED: verifyDuplicatePaymentPrevention - Duplicate payment request should have been blocked!]]>
    </line>
    <line>
      <![CDATA[<br><img src='E:/Folder/Galal/Courses/Digital Egypt Pioneers Initiative (DEPI) - Software Testing/DEPI Software Tester Graduation Project/automation-framework/reports/screenshots\TC-088\TC-088_screenshot.png' height='300' width='400'/><br>]]>
    </line>
    <line>
      <![CDATA[🟢 Test Started: verifyExpiredPaymentMethod (🔢 Test Case ID: TC-012)]]>
    </line>
    <line>
      <![CDATA[
🌍 Test Environment:
🖥️ OS: Windows 11 10.0
☕ Java Version: 23.0.1
🌐 Browser: chrome 134.0.6998.118
]]>
    </line>
    <line>
      <![CDATA[✅ Test PASSED: verifyExpiredPaymentMethod (Duration: 37965ms)]]>
    </line>
    <line>
      <![CDATA[<br><img src='E:/Folder/Galal/Courses/Digital Egypt Pioneers Initiative (DEPI) - Software Testing/DEPI Software Tester Graduation Project/automation-framework/reports/screenshots\TC-012\TC-012_screenshot.png' height='300' width='400'/><br>]]>
    </line>
    <line>
      <![CDATA[🟢 Test Started: verifyPaymentFailsWithInsufficientFunds (🔢 Test Case ID: TC-095)]]>
    </line>
    <line>
      <![CDATA[
🌍 Test Environment:
🖥️ OS: Windows 11 10.0
☕ Java Version: 23.0.1
🌐 Browser: chrome 134.0.6998.118
]]>
    </line>
    <line>
      <![CDATA[❌ Test FAILED: verifyPaymentFailsWithInsufficientFunds - Transaction should have been declined due to insufficient funds, but it was processed successfully.]]>
    </line>
    <line>
      <![CDATA[<br><img src='E:/Folder/Galal/Courses/Digital Egypt Pioneers Initiative (DEPI) - Software Testing/DEPI Software Tester Graduation Project/automation-framework/reports/screenshots\TC-095\TC-095_screenshot.png' height='300' width='400'/><br>]]>
    </line>
    <line>
      <![CDATA[🟢 Test Started: verifyPaymentViaCreditCard (🔢 Test Case ID: TC-082)]]>
    </line>
    <line>
      <![CDATA[
🌍 Test Environment:
🖥️ OS: Windows 11 10.0
☕ Java Version: 23.0.1
🌐 Browser: chrome 134.0.6998.118
]]>
    </line>
    <line>
      <![CDATA[✅ Test PASSED: verifyPaymentViaCreditCard (Duration: 36160ms)]]>
    </line>
    <line>
      <![CDATA[<br><img src='E:/Folder/Galal/Courses/Digital Egypt Pioneers Initiative (DEPI) - Software Testing/DEPI Software Tester Graduation Project/automation-framework/reports/screenshots\TC-082\TC-082_screenshot.png' height='300' width='400'/><br>]]>
    </line>
  </reporter-output>
  <suite started-at="2025-03-23T06:59:51 EET" name="Surefire suite" finished-at="2025-03-23T07:04:25 EET" duration-ms="273576">
    <groups>
      <group name="security">
        <method signature="PaymentsTest.verifyDuplicatePaymentPrevention()[pri:0, instance:tests.ui.PaymentsTest@71b3bc45]" name="verifyDuplicatePaymentPrevention" class="tests.ui.PaymentsTest"/>
      </group> <!-- security -->
      <group name="functional">
        <method signature="PaymentsTest.verifyAvailablePaymentMethods()[pri:0, instance:tests.ui.PaymentsTest@71b3bc45]" name="verifyAvailablePaymentMethods" class="tests.ui.PaymentsTest"/>
        <method signature="PaymentsTest.verifyPaymentFailsWithInsufficientFunds()[pri:0, instance:tests.ui.PaymentsTest@71b3bc45]" name="verifyPaymentFailsWithInsufficientFunds" class="tests.ui.PaymentsTest"/>
        <method signature="PaymentsTest.verifyPaymentViaCreditCard()[pri:0, instance:tests.ui.PaymentsTest@71b3bc45]" name="verifyPaymentViaCreditCard" class="tests.ui.PaymentsTest"/>
      </group> <!-- functional -->
      <group name="smoke">
        <method signature="PaymentsTest.verifyExpiredPaymentMethod()[pri:0, instance:tests.ui.PaymentsTest@71b3bc45]" name="verifyExpiredPaymentMethod" class="tests.ui.PaymentsTest"/>
      </group> <!-- smoke -->
    </groups>
    <test started-at="2025-03-23T06:59:51 EET" name="Surefire test" finished-at="2025-03-23T07:04:25 EET" duration-ms="273576">
      <class name="tests.ui.PaymentsTest">
        <test-method is-config="true" signature="setUp(org.testng.ITestResult,org.testng.ITestContext)[pri:0, instance:tests.ui.PaymentsTest@71b3bc45]" started-at="2025-03-23T06:59:52 EET" name="setUp" finished-at="2025-03-23T07:00:09 EET" duration-ms="17269" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=PaymentsTest.verifyAvailablePaymentMethods()[pri:0, instance:tests.ui.PaymentsTest@71b3bc45] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@632b5c79]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyAvailablePaymentMethods()[pri:0, instance:tests.ui.PaymentsTest@71b3bc45]" started-at="2025-03-23T07:00:09 EET" name="verifyAvailablePaymentMethods" description="TC-083_TC-084" finished-at="2025-03-23T07:00:42 EET" duration-ms="33303" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Neither PayPal nor Cash On Delivery is available! expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Neither PayPal nor Cash On Delivery is available! expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertTrue(Assert.java:57)
at tests.ui.PaymentsTest.verifyAvailablePaymentMethods(PaymentsTest.java:147)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeSingleClass(TestNGDirectoryTestSuite.java:102)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:91)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[🟢 Test Started: verifyAvailablePaymentMethods (🔢 Test Case ID: TC-083_TC-084)]]>
            </line>
            <line>
              <![CDATA[
🌍 Test Environment:
🖥️ OS: Windows 11 10.0
☕ Java Version: 23.0.1
🌐 Browser: chrome 134.0.6998.118
]]>
            </line>
            <line>
              <![CDATA[❌ Test FAILED: verifyAvailablePaymentMethods - Neither PayPal nor Cash On Delivery is available! expected [true] but found [false]]]>
            </line>
            <line>
              <![CDATA[<br><img src='E:/Folder/Galal/Courses/Digital Egypt Pioneers Initiative (DEPI) - Software Testing/DEPI Software Tester Graduation Project/automation-framework/reports/screenshots\TC-083_TC-084\TC-083_TC-084_screenshot.png' height='300' width='400'/><br>]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyAvailablePaymentMethods -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ui.PaymentsTest@71b3bc45]" started-at="2025-03-23T07:00:42 EET" name="tearDown" finished-at="2025-03-23T07:00:42 EET" duration-ms="173" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAvailablePaymentMethods status=FAILURE method=PaymentsTest.verifyAvailablePaymentMethods()[pri:0, instance:tests.ui.PaymentsTest@71b3bc45] output=🟢 Test Started: verifyAvailablePaymentMethods (🔢 Test Case ID: TC-083_TC-084)]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(org.testng.ITestResult,org.testng.ITestContext)[pri:0, instance:tests.ui.PaymentsTest@71b3bc45]" started-at="2025-03-23T07:00:42 EET" name="setUp" finished-at="2025-03-23T07:00:59 EET" duration-ms="16898" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=PaymentsTest.verifyDuplicatePaymentPrevention()[pri:0, instance:tests.ui.PaymentsTest@71b3bc45] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@632b5c79]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyDuplicatePaymentPrevention()[pri:0, instance:tests.ui.PaymentsTest@71b3bc45]" started-at="2025-03-23T07:00:59 EET" name="verifyDuplicatePaymentPrevention" description="TC-088" finished-at="2025-03-23T07:01:35 EET" duration-ms="36101" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Duplicate payment request should have been blocked!]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Duplicate payment request should have been blocked!
at org.testng.Assert.fail(Assert.java:111)
at tests.ui.PaymentsTest.verifyDuplicatePaymentPrevention(PaymentsTest.java:183)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeSingleClass(TestNGDirectoryTestSuite.java:102)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:91)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[🟢 Test Started: verifyDuplicatePaymentPrevention (🔢 Test Case ID: TC-088)]]>
            </line>
            <line>
              <![CDATA[
🌍 Test Environment:
🖥️ OS: Windows 11 10.0
☕ Java Version: 23.0.1
🌐 Browser: chrome 134.0.6998.118
]]>
            </line>
            <line>
              <![CDATA[❌ Test FAILED: verifyDuplicatePaymentPrevention - Duplicate payment request should have been blocked!]]>
            </line>
            <line>
              <![CDATA[<br><img src='E:/Folder/Galal/Courses/Digital Egypt Pioneers Initiative (DEPI) - Software Testing/DEPI Software Tester Graduation Project/automation-framework/reports/screenshots\TC-088\TC-088_screenshot.png' height='300' width='400'/><br>]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDuplicatePaymentPrevention -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ui.PaymentsTest@71b3bc45]" started-at="2025-03-23T07:01:36 EET" name="tearDown" finished-at="2025-03-23T07:01:36 EET" duration-ms="177" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDuplicatePaymentPrevention status=FAILURE method=PaymentsTest.verifyDuplicatePaymentPrevention()[pri:0, instance:tests.ui.PaymentsTest@71b3bc45] output=🟢 Test Started: verifyDuplicatePaymentPrevention (🔢 Test Case ID: TC-088)]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(org.testng.ITestResult,org.testng.ITestContext)[pri:0, instance:tests.ui.PaymentsTest@71b3bc45]" started-at="2025-03-23T07:01:36 EET" name="setUp" finished-at="2025-03-23T07:01:52 EET" duration-ms="16542" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=PaymentsTest.verifyExpiredPaymentMethod()[pri:0, instance:tests.ui.PaymentsTest@71b3bc45] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@632b5c79]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyExpiredPaymentMethod()[pri:0, instance:tests.ui.PaymentsTest@71b3bc45]" started-at="2025-03-23T07:01:52 EET" name="verifyExpiredPaymentMethod" description="TC-012" finished-at="2025-03-23T07:02:30 EET" duration-ms="37965" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[🟢 Test Started: verifyExpiredPaymentMethod (🔢 Test Case ID: TC-012)]]>
            </line>
            <line>
              <![CDATA[
🌍 Test Environment:
🖥️ OS: Windows 11 10.0
☕ Java Version: 23.0.1
🌐 Browser: chrome 134.0.6998.118
]]>
            </line>
            <line>
              <![CDATA[✅ Test PASSED: verifyExpiredPaymentMethod (Duration: 37965ms)]]>
            </line>
            <line>
              <![CDATA[<br><img src='E:/Folder/Galal/Courses/Digital Egypt Pioneers Initiative (DEPI) - Software Testing/DEPI Software Tester Graduation Project/automation-framework/reports/screenshots\TC-012\TC-012_screenshot.png' height='300' width='400'/><br>]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyExpiredPaymentMethod -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ui.PaymentsTest@71b3bc45]" started-at="2025-03-23T07:02:30 EET" name="tearDown" finished-at="2025-03-23T07:02:31 EET" duration-ms="149" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyExpiredPaymentMethod status=SUCCESS method=PaymentsTest.verifyExpiredPaymentMethod()[pri:0, instance:tests.ui.PaymentsTest@71b3bc45] output=🟢 Test Started: verifyExpiredPaymentMethod (🔢 Test Case ID: TC-012)]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(org.testng.ITestResult,org.testng.ITestContext)[pri:0, instance:tests.ui.PaymentsTest@71b3bc45]" started-at="2025-03-23T07:02:31 EET" name="setUp" finished-at="2025-03-23T07:02:48 EET" duration-ms="17244" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=PaymentsTest.verifyPaymentFailsWithInsufficientFunds()[pri:0, instance:tests.ui.PaymentsTest@71b3bc45] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@632b5c79]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyPaymentFailsWithInsufficientFunds()[pri:0, instance:tests.ui.PaymentsTest@71b3bc45]" started-at="2025-03-23T07:02:48 EET" name="verifyPaymentFailsWithInsufficientFunds" description="TC-095" finished-at="2025-03-23T07:03:31 EET" duration-ms="43028" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Transaction should have been declined due to insufficient funds, but it was processed successfully.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Transaction should have been declined due to insufficient funds, but it was processed successfully.
at org.testng.Assert.fail(Assert.java:111)
at tests.ui.PaymentsTest.verifyPaymentFailsWithInsufficientFunds(PaymentsTest.java:222)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeSingleClass(TestNGDirectoryTestSuite.java:102)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:91)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[🟢 Test Started: verifyPaymentFailsWithInsufficientFunds (🔢 Test Case ID: TC-095)]]>
            </line>
            <line>
              <![CDATA[
🌍 Test Environment:
🖥️ OS: Windows 11 10.0
☕ Java Version: 23.0.1
🌐 Browser: chrome 134.0.6998.118
]]>
            </line>
            <line>
              <![CDATA[❌ Test FAILED: verifyPaymentFailsWithInsufficientFunds - Transaction should have been declined due to insufficient funds, but it was processed successfully.]]>
            </line>
            <line>
              <![CDATA[<br><img src='E:/Folder/Galal/Courses/Digital Egypt Pioneers Initiative (DEPI) - Software Testing/DEPI Software Tester Graduation Project/automation-framework/reports/screenshots\TC-095\TC-095_screenshot.png' height='300' width='400'/><br>]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyPaymentFailsWithInsufficientFunds -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ui.PaymentsTest@71b3bc45]" started-at="2025-03-23T07:03:31 EET" name="tearDown" finished-at="2025-03-23T07:03:31 EET" duration-ms="313" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyPaymentFailsWithInsufficientFunds status=FAILURE method=PaymentsTest.verifyPaymentFailsWithInsufficientFunds()[pri:0, instance:tests.ui.PaymentsTest@71b3bc45] output=🟢 Test Started: verifyPaymentFailsWithInsufficientFunds (🔢 Test Case ID: TC-095)]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(org.testng.ITestResult,org.testng.ITestContext)[pri:0, instance:tests.ui.PaymentsTest@71b3bc45]" started-at="2025-03-23T07:03:31 EET" name="setUp" finished-at="2025-03-23T07:03:48 EET" duration-ms="17051" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=PaymentsTest.verifyPaymentViaCreditCard()[pri:0, instance:tests.ui.PaymentsTest@71b3bc45] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@632b5c79]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyPaymentViaCreditCard()[pri:0, instance:tests.ui.PaymentsTest@71b3bc45]" started-at="2025-03-23T07:03:48 EET" name="verifyPaymentViaCreditCard" description="TC-082" finished-at="2025-03-23T07:04:25 EET" duration-ms="36160" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[🟢 Test Started: verifyPaymentViaCreditCard (🔢 Test Case ID: TC-082)]]>
            </line>
            <line>
              <![CDATA[
🌍 Test Environment:
🖥️ OS: Windows 11 10.0
☕ Java Version: 23.0.1
🌐 Browser: chrome 134.0.6998.118
]]>
            </line>
            <line>
              <![CDATA[✅ Test PASSED: verifyPaymentViaCreditCard (Duration: 36160ms)]]>
            </line>
            <line>
              <![CDATA[<br><img src='E:/Folder/Galal/Courses/Digital Egypt Pioneers Initiative (DEPI) - Software Testing/DEPI Software Tester Graduation Project/automation-framework/reports/screenshots\TC-082\TC-082_screenshot.png' height='300' width='400'/><br>]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyPaymentViaCreditCard -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ui.PaymentsTest@71b3bc45]" started-at="2025-03-23T07:04:25 EET" name="tearDown" finished-at="2025-03-23T07:04:25 EET" duration-ms="252" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyPaymentViaCreditCard status=SUCCESS method=PaymentsTest.verifyPaymentViaCreditCard()[pri:0, instance:tests.ui.PaymentsTest@71b3bc45] output=🟢 Test Started: verifyPaymentViaCreditCard (🔢 Test Case ID: TC-082)]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.ui.PaymentsTest -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
